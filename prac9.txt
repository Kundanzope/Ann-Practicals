import numpy as np
def bipolar(x):
    return np.where(x == 0, -1, 1)
def sign(x):
    return np.where(x >= 0, 1, -1)
patterns = np.array([
    [1, -1, 1, -1, 1, -1],
    [1, 1, -1, -1, 1, 1],
    [-1, -1, 1, 1, -1, -1],
    [-1, 1, -1, 1, -1, 1]])

size = patterns.shape[1]
W = np.zeros((size, size))
for p in patterns:
    W += np.outer(p, p)
np.fill_diagonal(W, 0)
test = np.array([1, -1, 1, -1, -1, -1])
def recall(x, W, steps=5):
    x = x.copy()
    for _ in range(steps):
        for i in range(len(x)):
            x[i] = sign(np.dot(W[i], x))
    return x

output = recall(test, W)
print("Test pattern:   ", test)
print("Recalled pattern:", output)


output:
Test pattern:    [ 1 -1  1 -1 -1 -1]
Recalled pattern: [ 1 -1  1 -1  1 -1]

